/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define HLHOLD(X) &mt LS(LA(X)) LA(X)

#define DEFAULT 0
#define HERBST  1
#define NUM     2
#define NAV     3

&left_encoder { resolution = <2>; };
&right_encoder { resolution = <2>; };


/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			//bindings = <
	//&kp ESC   &kp Q &kp W &kp E &kp R &kp T                                                &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	//&kp TAB   &kp A &kp S &kp D &kp F &kp G                                                &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
	//&kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &kp LSHFT        &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	                 //&kp LGUI &kp DEL &kp RET &kp SPACE &kp ESC        &kp RET  &kp SPACE  &kp TAB &kp BSPC &kp RALT
			//>;

			bindings = <
	&kp ESC    &kp Q &kp W &kp F &kp P &kp B                                                &kp J &kp L  &kp U     &kp Y   &kp SEMI &kp BSLH
	&kp TAB    &kp A &hm LGUI R &hm LALT S &hm LCTRL T &kp G                        &kp M &hm RCTRL N  &hm LALT E &hm RGUI I   &kp O    &kp SQT
    &kp LSHIFT &kp Z &kp X &kp C &kp D &kp V &kp LSHFT &kp LSHFT                   &kp LSHFT &kp LSHFT &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	                 &kp LGUI &kp DEL &lt NAV RET &lt HERBST SPACE &lt NUM ESC        &kp RET  &mt LSHFT SPACE &kp BSPC  &kp TAB &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp UP DOWN>;
		};

		herbst_layer {
			bindings = <
	&bt BT_SEL 0  HLHOLD(F5) HLHOLD(F4) HLHOLD(F3) HLHOLD(F2) HLHOLD(F1)               &kp LA(RET) &kp LA(U) HLHOLD(UP) &kp LA(SPACE) &kp LA(F) &trans
	&bt BT_SEL 1 HLHOLD(N5) HLHOLD(N4) HLHOLD(N3) HLHOLD(N2) HLHOLD(N1)                &trans HLHOLD(LEFT) HLHOLD(DOWN) HLHOLD(RIGHT) &trans &trans
    &bt BT_SEL 2 &trans &trans &trans &trans &trans HLHOLD(Y) HLHOLD(O)                      &trans &trans       &kp LA(M)    &kp LA(COMMA) &trans &trans &trans &trans
                       &trans &trans &trans &trans &trans                        &trans &trans &trans &trans &trans
			>;

			sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
		};

		num_layer {
			bindings = <
	&trans &trans &trans &trans &trans &trans                                                &trans  &kp N7 &kp N8 &kp N9 &trans &trans
	&trans &trans &trans &trans &trans &trans                                                &trans  &kp N4 &kp N5 &kp N6 &trans &trans
    &trans &trans &trans &trans &trans &trans &trans &trans                        &trans &trans &kp N0 &kp N1 &kp N2 &kp N3 &trans &trans
	                  &trans &trans &trans &trans &trans                        &trans &trans &trans &trans &trans
			>;

			sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
		};

		nav_layer {
			bindings = <
	&trans &trans &trans &trans &trans &trans                                                &trans  &trans &kp UP &trans &trans &trans
	&trans &trans &trans &trans &trans &trans                                                &trans  &kp RIGHT &kp DOWN &kp RIGHT &trans &trans
//  &trans &trans &trans &trans &trans &trans &trans &trans                        &trans &trans &trans &trans &trans &trans &trans &trans
	                  &trans &trans &trans &trans &trans                        &trans &trans &trans &trans &trans
			>;

			sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
		};
	};
};


//	&trans &trans &trans &trans &trans &trans                                                &trans &trans &trans &trans &trans &trans
//	&trans &trans &trans &trans &trans &trans                                                &trans &trans &trans &trans &trans &trans
//  &trans &trans &trans &trans &trans &trans &trans &trans                        &trans &trans &trans &trans &trans &trans &trans &trans
//                    &trans &trans &trans &trans &trans                        &trans &trans &trans &trans &trans
